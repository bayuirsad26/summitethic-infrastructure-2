# {{ ansible_managed }}
# SummitEthic Monitoring Stack - Security Level: {{ security_level }}
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:{{ prometheus_version }}
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time={{ prometheus_retention }}'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true
    user: nobody:nogroup
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  alertmanager:
    image: prom/alertmanager:{{ alertmanager_version }}
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ./alertmanager/templates:/etc/alertmanager/templates:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - "127.0.0.1:9093:9093"
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true
    user: nobody:nogroup
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:{{ grafana_version }}
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://{{ grafana_domain }}/
      - GF_SERVER_DOMAIN={{ grafana_domain }}
      - GF_SMTP_ENABLED={{ grafana_smtp_enabled }}
      - GF_SMTP_HOST={{ grafana_smtp_host | default('') }}
      - GF_SMTP_USER={{ grafana_smtp_user | default('') }}
      - GF_SMTP_PASSWORD={{ grafana_smtp_password | default('') }}
      - GF_SMTP_FROM_ADDRESS={{ grafana_smtp_from | default('') }}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_STRICT_TRANSPORT_SECURITY=true
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true
    user: "472"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  node-exporter:
    image: prom/node-exporter:{{ node_exporter_version }}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - "127.0.0.1:9100:9100"
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true
    user: nobody:nogroup

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ cadvisor_version }}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  alertmanager_data:
  grafana_data: